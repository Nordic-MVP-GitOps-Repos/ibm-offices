apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-ibmoffices-app
  namespace: ibmoffices
spec:
  params:
    - default: 'https://github.com/Nordic-MVP-GitOps-Repos/ibm-offices'
      name: git-repo-url
      type: string
    - default: src/main/docker/Dockerfile.jvm
      name: dockerfile-path
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.git-repo-url)
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:a538c423e7a11aae6ae582a411fdb090936458075f99af4ce5add038bb6983e8
        - name: userHome
          value: /tekton/home
      taskRef:
        kind: ClusterTask
        name: git-clone-1-8-0
      workspaces:
        - name: output
          workspace: workspace
    - name: gradle
      params:
        - name: GRADLE_IMAGE
          value: 'docker.io/library/gradle:jdk11'
        - name: PROJECT_DIR
          value: .
        - name: TASKS
          value:
            - build
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: gradle
      workspaces:
        - name: source
          workspace: workspace
    - name: buildah
      params:
        - name: IMAGE
          value: 'image-registry.openshift-image-registry.svc:5000/ibmoffices/ibmoffices:$(tasks.git-clone.results.commit)'
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:0a86ecbdfbe86e9d225b7fe4b090a0dd6d323f8afdfdf2bd933ff223ddb53320
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: $(params.dockerfile-path)
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - gradle
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: workspace
    - name: apic-client
      params: 
        - name: APIC_CLIENT_IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/ibmoffices/apic-client@sha256:316d9ea3c2f561c1bc78ba31b35f61d3ccbe0112439aba0800eab76ec2f75dc4
        - name: MGMT_SERVER_URL
          value: https://api-connec-58c7668e-platform-api-cp4i.itzroks-2700015rqr-7vz6mp-6ccd7f378ae819553d37d5f2ee142bd6-0000.eu-de.containers.appdomain.cloud/api
        - name: PROVIDER_ORG
          value: po
        - name: CATALOG
          value: sandbox
        - name: SCRIPT
          value: |
          
            export TARGET_URL=https://secure-route-ibmoffices.itzroks-2700015rqr-7vz6mp-6ccd7f378ae819553d37d5f2ee142bd6-0000.eu-de.containers.appdomain.cloud/offices
           
            # Fetch openapi description of the ibmoffices service
            curl -k -s https://secure-route-ibmoffices.itzroks-2700015rqr-7vz6mp-6ccd7f378ae819553d37d5f2ee142bd6-0000.eu-de.containers.appdomain.cloud/q/openapi > openapi.yaml
           
            # Set description, version and title of the api
            yq -i '.info.description = "Git commit is $(tasks.git-clone.results.commit) from $(tasks.git-clone.results.url)"' openapi.yaml
            yq -i '.info.version = "1.0.0"' openapi.yaml
            yq -i '.info.title = "ibm-offices-$(tasks.git-clone.results.commit)"' openapi.yaml
            
            # Add target-url gateway property
            yq -i '.x-ibm-configuration.properties += {"target-url": {"value": strenv(TARGET_URL)}}' openapi.yaml
  
            apic validate openapi.yaml
            
            apic draft-apis:create --api_type rest --gateway_type datapower-api-gateway ./openapi.yaml
            
            export PRODUCT_NAME=ibm-offices-$(tasks.git-clone.results.commit)-Product
            
            apic create:product --apis ibm-offices-$(tasks.git-clone.results.commit) --gateway-type datapower-api-gateway --name $PRODUCT_NAME --title $PRODUCT_NAME --filename product.yaml 
  
            cat product.yaml
            apic validate product.yaml
          
            cp openapi.yaml ibm-offices-$(tasks.git-clone.results.commit)
            
            apic draft-apis:list-all
            
            apic draft-products:create product.yaml
  
      runAfter:
        - buildah
      taskRef:
        kind: Task
        name: apic-client
      workspaces:
        - name: workspace
          workspace: workspace
        - name: client-credentials
          workspace: client-credentials
        - name: basic-auth
          workspace: basic-auth
  workspaces:
    - name: workspace
    - name: client-credentials
    - name: basic-auth
